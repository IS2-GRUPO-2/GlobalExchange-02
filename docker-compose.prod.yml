services:
  backend:
    build: ./backend
    container_name: backend_app_prod
    hostname: backend
    command: python manage.py collectstatic --noinput && gunicorn globalexchange.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/app:delegated
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy

  nginx_prod:
    image: nginx:alpine
    container_name: nginx_prod
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - backend


  db:
    image: postgres:17-alpine
    container_name: db_postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  pg_data:
  static_volume:
  media_volume:
