services:
  backend:
    build: ./backend
    container_name: backend_desrr
    hostname: backend
    command: >
      bash -c "python manage.py migrate --noinput && python -m seeds.load_all_seeds && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app:delegated
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: frontend_desrr
    hostname: frontend
    command: npm run dev -- --host
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  simulador_pagos:
    build: ./pago-api
    container_name: simulador_pagos_desrr
    hostname: simulador_pagos
    depends_on:
      - backend

  db:
    image: postgres:17-alpine
    container_name: db_postgres_desrr
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  pg_data:
